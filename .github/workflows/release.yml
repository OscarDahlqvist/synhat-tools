# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Build type (Unimplemented)'
        # Default value if no value is explicitly provided
        default: 'default'
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel         
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
          
      - name: execute py script # run the run.py to get the latest data
        run: |
          cd code/generator
          pip install checksumdir
          pip install simplejson
          python perm_creator.py
          python create_pack.py
        
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
           zip -r release pack_output
           
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: tag-${{ github.run_number }}
          release_name: release-${{ github.run_number }}
          body: |
            This file was automatically generated.
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
